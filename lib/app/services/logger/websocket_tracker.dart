// SPDX-License-Identifier: ice License 1.0

import 'package:ion/app/features/ion_connect/ion_connect.dart';

// Tracks WebSocket instances with unique IDs for logging purposes only
class WebSocketTracker {
  WebSocketTracker._();

  static int _nextSocketId = 1;
  static final Map<IonConnectRelay, int> _socketIds = {};

  // Assigns and returns a unique socket ID(generated by us) for the given relay
  static int register(IonConnectRelay relay) {
    final socketId = _nextSocketId++;
    _socketIds[relay] = socketId;
    return socketId;
  }

  // Gets the socket ID for a relay, or null if not registered
  static int? getSocketId(IonConnectRelay relay) {
    return _socketIds[relay];
  }

  // Removes the relay from tracking
  static void unregister(IonConnectRelay relay) {
    _socketIds.remove(relay);
  }

  // Extracts host:port from a URL
  static String getHost(String url) {
    final uri = Uri.parse(url);
    return uri.authority.isNotEmpty ? uri.authority : uri.host;
  }
}
